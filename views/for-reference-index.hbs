<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">

  {{!-- For normalizing --}}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.0/normalize.css" />

  {{!-- jQuery Cupertino Theme & css --}}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/themes/cupertino/jquery-ui.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/themes/cupertino/theme.min.css" />

  {{!-- custom css --}}
  <link rel="stylesheet" href="styles.css">

  {{!-- jQuery and jQueryUI --}}
  <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
  crossorigin="anonymous"></script>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU="
  crossorigin="anonymous"></script>

  <script type="text/javascript">
    $(document).ready(function () {
      console.log("You have been logged in!");

      $("#tabs").tabs();

      // For the 1st chart
      $('input[name="category1"]').change(function () {
        if ($('input[name="category1"]:checked').val() === "yes") {
          var formElement = "<div id='form-heading1'><h2>View Your Ranking:</h2><br/><h3>Enter your GPA and SAT score to see where you rank!</h3> <form name='checkRank' onsubmit='return validateGPA_SAT()'' method='POST' action='chart1'>GPA (4.0 scale):<input type='text' name='gpa' value=0 id='gpa1'  required><br><br><div id=\"slider-range-max\" class='ui-slider'></div><br>SAT score (out of 2400):<input type='text' name='score' id='score1' required><br><br><div id=\"slider-range-max1\"></div><input type='submit'></form></div>";
          $('#question1').append(formElement);
          $( "#slider-range-max" ).slider({
            range: "max",
            min: 0,
            max: 4,
            value: 0,
            step: 0.1,
            slide: function( event, ui ) {
              $( "#gpa1" ).val( ui.value );
            }
          });
          $( "#slider-range-max1" ).slider({
            range: "max",
            min: 0,
            max: 2400,
            value: 0,
            step: 1,
            slide: function( event, ui ) {
              $( "#score1" ).val( ui.value );
            }
          });
          $( "#score1" ).val( $( "#slider-range-max" ).slider( "value" ) );
          //$('input[name="category1"]').prop('disabled', true);
        } else {
          $('#form-heading1').remove();
          $('input[name="category1"]').prop('disabled', false);
        }
      });
      //for draggable

      $('.draggable').draggable({
        revert: true
      });
      //draggable ends
      //droppable and resizable box
      $('.droppable-resizable').droppable({
        accepts: '.draggable',
        drop: function(event, ui) {
          var bgColor = $(ui.draggable).css('background-image');
          console.log("bgcolor",bgColor);
          $('body').css('background-image', bgColor);

        }
      });
      $( '.droppable-resizable').resizable();
    //droppable and resizable box ends


      // For the 2nd chart
      $('input[name="category2"]').change(function () {
        if ($('input[name="category2"]:checked').val() === "yes") {
          var formElement1 = '<div id="form-heading2"><h2>View correlation between university and cost of attendance: </h2><br/><h3>Select your university of interest:</h3><form method="POST" action="chart2"><select required><option value="">--Please choose an option--</option><option value="saab">UC Irvine</option><option value="volvo">UC Berkeley</option><option value="opel">UCLA</option><option value="audi">UC Davis</option><option value="audi">UC Santa Barbara</option><option value="audi">UC Riverside</option><option value="audi">UC Merced</option></select> <br /><br /> <input type="submit" value="View correlation"></form></div>';
          $('#question2').append(formElement1);
          // $('input[name="category"]').prop('disabled', true);
        } else {
          $('#form-heading2').remove();
        }
      });

      // For the 3rd chart
      $('input[name="category3"]').change(function () {
        if ($('input[name="category3"]:checked').val() === "yes") {
          var formElement2 = '<div id="form-heading3"><h3>Select your university of interest:</h3><form method="POST" action="chart3"><select required><option value="">--Please choose an option--</option><option value="saab">UC Irvine</option><option value="volvo">UC Berkeley</option><option value="opel">UCLA</option><option value="audi">UC Davis</option><option value="audi">UC Santa Barbara</option><option value="audi">UC Riverside</option><option value="audi">UC Merced</option></select> <br /><br /><h3>View the top 3 universities with the highest graduation and retention rates:</h3><input type="submit" value="View correlation"></form></div>';
          $('#question3').append(formElement2);
          // $('input[name="category"]').prop('disabled', true);
        } else {
          $('#form-heading3').remove();
        }
      });


      $('#tabs > ul li').click(function () {
        console.log("match found");
       // alert($('input[name="univ"]:checked').val());

       $('#ranking').attr('href', "location?univ=ucb");
       var data = {};
       data.id = "title";

        // $.ajax({
        //     type: 'GET',
        //     data : JSON.stringify(data),
        //     contentType: 'application/json',
        //     url: 'http://localhost:3000/location',
        //     success: function (data) {
        //         console.log("success");
        //         console.log(JSON.stringify(data));
        //         $('#ranking').empty();
        //         $('#ranking').append("<div>This is location</div>");
        //     }
        // });
      });

    });

function validateGPA_SAT() {
  console.log("check");
  errors = ""
  gpaT = document.getElementById("gpa1").value;
  scoreT = document.getElementById("score1").value;

  if (gpaT == "") {
    errors += "Please enter a GPA.\n";
  }
  if (scoreT == "") {
    errors += "Please enter a SAT score.\n";
  }

  gpaRE = /^\d+\.*\d{0,2}$/;
  if (!gpaT.match(gpaRE) && gpaT != "") {
    errors += "Invalid GPA. " +
    "Only numbers, up to 2 decimal digits, are allowed as valid input for the GPA.\n";
  }
  scoreRE = /^[0-9]*$/;
  if (!scoreT.match(scoreRE) && scoreT != "") {
    errors += "Invalid SAT score. " +
    "Only integers are allowed as valid input for the SAT score.\n";
  }
  if (gpaT < 0 || gpaT > 4) {
    errors += "Enter a valid GPA between 0.00 and 4.00.\n"
  }
  if (scoreT < 0 || scoreT > 2400) {
    errors += "Enter a valid SAT score between 0 and 2400.\n";
  }

  if (errors != "") {
    alert(errors);
    console.log(errors);
    return false;
  }
}

</script>


</head>

<body onload="loader.init();">


  <header>
    <section class="title">
      <canvas id="canvas" width="250" height="250">
        <p>Canvas not supported!</p>
      </canvas>
      <h1 class="nobreak">Welcome to AdmissionTrends</h1>
      <form align="right" name="form1" method="post" action="logout">
        <label class="button_inline">
          <input name="submit2" type="submit" id="submit2" value="Logout">
        </label>
      </form>
    </section>
    {{!-- <div align="left" class="logo">
      <canvas id="canvas" align="left">
        <p>Canvas not supported!</p>
      </canvas>
    </div> --}}
    <nav class="main-nav">

      <ul>
        <li><a href="#">Home</a></li>
        <li><a href="/dashboard" active>Dashboard</a></li>
        <li><a href="/admin" active>Administrator Page</a></li>
        <li><a href="#" active>View Rankings</a></li>
        <li><a href="#">Help</a></li>
        <li><a href="#">About</a></li>
      </ul>
    </nav>

  </header>

  <section class="body-sections">
    <div id="question1">
      <h1>Do you have a valid GPA (0 to 2400) and SAT score (4.0 scale)?</h1>
      <input type="radio" name="category1" value="yes" id="yes1"><label for="yes1">Yes</label>
      <input type="radio" name="category1" value="no" id="no1"><label for="no1">No</label>
    </div>
  </section><br>

  <section class="body-sections">
    <div id="question2">
      <h1>Do you want to see the correlation between university and cost of attendance? </h1>
      <input type="radio" name="category2" value="yes" id="yes2"><label for="yes2">Yes</label>
      <input type="radio" name="category2" value="no" id="no2"><label for="no2">No</label>
    </div>
  </section> <br>

  <section class="body-sections">
    <div id="question3">
      <h1>Do you want to view the universities that have the highest graduation and retention rates? </h1>
      <input type="radio" name="category3" value="yes" id="yes3"><label for="yes3">Yes</label>
      <input type="radio" name="category3" value="no" id="no3"><label for="no3">No</label>
    </div>
  </section><br>

  <section class="body-sections">
    <h1>General University Information </h1>
    <div id="tabs">
      <ul>
        <li><a href="ucb.hbs">UC Berkeley</a></li>
        <li><a href="ucsd.hbs">UC San Diego</a></li>
        <li><a href="ucla.hbs">UCLA</a></li>
        <li><a href="ucsb.hbs">UC Santa Barbara</a></li>
        <li><a href="uci.hbs">UC Irvine</a></li>
      </ul>
      <!--      <div id="tabs-1">
        <ul style="list-style:none;">
          <li>
            <input type="radio" name="univ" value="ucb" id="ucb"><label for="ucb">UCB</label>
          </li>
          <li>
            <input type="radio" name="univ" value="ucsd" id="ucsd"><label for="ucsd">UCSD</label>
          </li>
        </ul>
      </div> -->
    </div>
  </section>

  <section class="body-sections">
    <div><h1>Select your background color here!</h1></div>
    <div class="left">

      <div class="draggable" id="drag-1">Drag Me</div>
      <div class="draggable" id="drag-2">Drag Me</div>
      <div class="draggable" id="drag-3">Drag Me</div>
      <div class="draggable" id="drag-4">Drag Me</div>
    </div>

    <div class="right"><div><h1>Drop Here</h1></div>
    <div class="droppable-resizable" id="drop-1" >Drop Here (I'm resizable too!)</div>

  </div>


</section>


<script>

   /* var canvasLoader = function () {

      var self = this;
      window.requestAnimFrame = function () { return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (a) { window.setTimeout(a, 1E3 / 60) } }();

      self.init = function () {
        self.canvas = document.getElementById('canvas');
        self.ctx = self.canvas.getContext('2d');
        self.ctx.lineWidth = .1;
        self.ctx.strokeStyle = 'rgba(0,0,255,0.7)'; //RGBA(142, 163, 211, 1.00)
        self.count = 75;
        self.rotation = 270 * (Math.PI / 180);
        self.speed = 4;
        self.canvasLoop();
      };

      self.updateLoader = function () {
        self.rotation += self.speed / 100;
      };

      self.renderLoader = function () {
        self.ctx.save();
        self.ctx.globalCompositeOperation = 'source-over';
        self.ctx.translate(125, 125);
        self.ctx.rotate(self.rotation);
        var i = self.count;
        while (i--) {
          self.ctx.beginPath();
          self.ctx.arc(0, 0, i + (Math.random() * 35), Math.random(), Math.PI / 3 + (Math.random() / 12), false);
          self.ctx.stroke();
        }
        self.ctx.restore();
      };

      self.canvasLoop = function () {
        requestAnimFrame(self.canvasLoop, self.canvas);
        self.ctx.globalCompositeOperation = 'destination-out';
        self.ctx.fillStyle = 'rgba(0,0,0,.03)';
        self.ctx.fillRect(0, 0, 250, 250);
        self.updateLoader();
        self.renderLoader();
      };

    };

    var loader = new canvasLoader();
    loader.init();*/

    window.onload = function(){
      var canvas = document.getElementById("canvas");
      var ctx = canvas.getContext("2d");
  //Lets resize the canvas to occupy the full page
  var W = 200; //window.innerWidth;
  var H = 200;//window.innerHeight;
  canvas.width = W;
  canvas.height = H;
  
  //Some variables
  var length, divergence, reduction, line_width, start_points = [];
  
  init();
  
  function init()
  {
    //filling the canvas white
    ctx.fillStyle = "transparent";
    ctx.fillRect(0, 0, W, H);
    
    //Lets draw the trunk of the tree
    //lets randomise the variables
    //length of the trunk - 100-150
    length = 10 + Math.round(Math.random()*50);
    //angle at which branches will diverge - 10-60
    divergence = 10 + Math.round(Math.random()*50);
    //Every branch will be 0.75times of the previous one - 0.5-0.75
    //with 2 decimal points
    reduction = Math.round(50 + Math.random()*20)/100;
    //width of the branch/trunk
    line_width = 10;
    
    //This is the end point of the trunk, from where branches will diverge
    var trunk = {x: W/2, y: length+50, angle: 90};
    //It becomes the start point for branches
    start_points = []; //empty the start points on every init();
    start_points.push(trunk);
    
    //Y coordinates go positive downwards, hence they are inverted by deducting it
    //from the canvas height = H
    ctx.beginPath();
    ctx.moveTo(trunk.x, H-50);
    ctx.lineTo(trunk.x, H-trunk.y);
    ctx.strokeStyle = "brown";
    ctx.lineWidth = line_width;
    ctx.stroke();
    
    branches();
  }
  
  //Lets draw the branches now
  function branches()
  {
    //reducing line_width and length
    length = length * reduction;
    line_width = line_width * reduction;
    ctx.lineWidth = line_width;
    
    var new_start_points = [];
    ctx.beginPath();
    for(var i = 0; i < start_points.length; i++)
    {
      var sp = start_points[i];
      //2 branches will come out of every start point. Hence there will be
      //2 end points. There is a difference in the divergence.
      var ep1 = get_endpoint(sp.x, sp.y, sp.angle+divergence, length);
      var ep2 = get_endpoint(sp.x, sp.y, sp.angle-divergence, length);
      
      //drawing the branches now
      ctx.moveTo(sp.x, H-sp.y);
      ctx.lineTo(ep1.x, H-ep1.y);
      ctx.moveTo(sp.x, H-sp.y);
      ctx.lineTo(ep2.x, H-ep2.y);
      
      //Time to make this function recursive to draw more branches
      ep1.angle = sp.angle+divergence;
      ep2.angle = sp.angle-divergence;
      
      new_start_points.push(ep1);
      new_start_points.push(ep2);
    }
    //Lets add some more color
    if(length < 10) ctx.strokeStyle = "green";
    else ctx.strokeStyle = "brown";
    ctx.stroke();
    start_points = new_start_points;
    //recursive call - only if length is more than 2.
    //Else it will fall in an long loop
    if(length > 2) setTimeout(branches, 50);
    else setTimeout(init, 1000);
  }
  
  function get_endpoint(x, y, a, length)
  {
    //This function will calculate the end points based on simple vectors
    //http://physics.about.com/od/mathematics/a/VectorMath.htm
    //You can read about basic vectors from this link
    var epx = x + length * Math.cos(a*Math.PI/180);
    var epy = y + length * Math.sin(a*Math.PI/180);
    return {x: epx, y: epy};
  }
  
}

</script>

</body>      


</html>
